class Solution {
public:
   ListNode*  Reverse(ListNode* head){
         ListNode *curr=head , *next=NULL,*prev=NULL;
         while(curr!=NULL){
             next=curr->next;
             curr->next=prev;
             prev=curr;
             curr=next;
         }
         return prev;
     }
    bool isPalindrome(ListNode* head) {
        if(head==NULL || head->next==NULL)
            return true;
        ListNode *slow=head , *fast=head;
        while(fast->next!=NULL && fast->next->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;
        }
        slow->next=Reverse(slow->next);
        slow=slow->next;
        while(slow!=NULL){
            if(head->val!=slow->val)
                return false;
            head=head->next;
            slow=slow->next;
            
        }
        return true;
    }
};
