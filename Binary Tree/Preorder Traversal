//Recursive Traversal

class Solution {
public:
   void preorder(TreeNode* root ,  vector<int>&v){
      if(root==NULL)
          return ;
       v.push_back(root->val);
       preorder(root->left , v);
       preorder(root->right , v);
   }
    vector<int> preorderTraversal(TreeNode* root) {
       vector<int>v;
        preorder(root,v);
        return v;
    }
};

//Iterative Traversal

class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int>v;
        if(root==NULL)
            return v;
           stack<TreeNode*>s;
        s.push(root);
        while(!s.empty()){
            root=s.top();
            s.pop();
            v.push_back(root->val);
            if(root->right!=NULL)
                s.push(root->right);
            if(root->left!=NULL)
                s.push(root->left);
            
        }
        return v;
        
    }
};
